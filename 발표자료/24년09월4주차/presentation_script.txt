1
이번주는 A#의 보행보조장치 프로젝트에 대한 하드웨어와 소프트웨어에 대한 플로우에 대해서 설명드리고자 합니다
2
먼저 대략적인 개요부터 보여드리겠습니다
저희는 프로젝트를 진행할때 기성 보행보조장치를 개조하는 형태로 진행하고자 합니다
여기에는 압력센서와 자이로 센서, 홀센서와 라즈베리파이를 이용한 비전처리를 통한 센싱을 진행하며
기존 뒤쪽 바퀴가 위치한 곳에 모터를 장착하여 구동하도록 하고자 합니다
3
먼저 배터리가 필요하겠죠
완구형 자동차나 전동 휠체어와 같은 장치들에서 사용하는 배터리를 사용하고자 합니다
최소 12V, 10A부터 보고있고 모터의 구동 전력과 사용시간을 고려하여 최적 용량을 찾을 예정입니다
4
구동을 위해서 모터가 필요합니다
단가를 낮추기위해 BLDC보다는 DC모터를 사용해야할 것으로 보입니다
그리고 뒤쪽에 위치한 양 바퀴에 모터를 하나씩 달아서 조향을 할 수 있도록 하고자 합니다
5
우리가 만들고자 하는 시스템의 동작은 핸들의 압력을 기반으로 동작합니다
때문에 압력센서를 핸들에 부착해야하는데, 단순히 전체적인 압력에 대한 저항값 하나만 받게 되면 방향성을 파악할 수 없습니다
때문에 이미지와 같은 Matrix 형태로 여러개의 센서가 구현된 압력 패턴 센서를 사용하고자 합니다
찾아봤을때 FSR과 Tekscan이라는 회사가 이와 관련된 센서를 제조하는 것으로 보입니다
6
앞에서 설명드린대로 이런 패턴형 압력센서는 핸들에 원기둥 형태로 말아진 형태로 부착되며
오른쪽 그림과 같이 손이 핸들의 어떤 부분에 압력을 가하고 있는지를 센싱합니다
그리고 이 입력값을 토대로 차체가 구동하게 됩니다
7
다음으로 사용하는 센서는 자이로센서이고요
내리막길에 있는지 오르막길에 있는지와 같은 차체의 위치 정보를 파악하기 위해 사용하고자 합니다
8
다음으로는 자석이랑 홀센서를 사용하려고 하는데
바퀴에 자석과 함께 부착하여 정확한 바퀴의 회전수를 측정함과 동시에
좌우 바퀴 회전량을 통해 정확한 조향을 구현하고자 합니다
홀센서의 경우 자이로센서의 데이터로 충분히 처리 가능하다고 판단되면 배제할 계획입니다
9
영상처리는 사람마다 핸들에 가하는 압력과 이동하고자 하는 속도가 다르기 때문에 이를 보정하기 위해 필요합니다
이를 위해 오픈소스 프로젝트들을 참고하고 활용할 계획입니다
10
저희 시스템을 컨트롤하는건 라즈베리파이가 아닙니다
이미지 상으로는 ESP32를 넣어놨는데
별도의 마이크로 컨트롤러를 사용해서 센싱과 엑추에이팅을 하도록 구성할 예정입니다
라즈베리파이는 영상 처리만 담당하도록 하고 배터리를 사용하는 특성 상 전체 구동 시간 중 일부분에 한해서만 녹화하고 별도로 학습하도록 하게 할 예정입니다
11
기본적으로 각 센서의 입력을 받고 처리하는건 마이크로 컨트롤러가
그리고 영상처리와 관련된 프로세스는 라즈베리파이와 같은 별도 보드가 관리합니다
이는 전원 이슈에 대한 최적화를 위해 고안했는데
마이크로 컨트롤러는 신경망을 기반으로 동작하며 내부 가중치의 경우에는 핸들 압력과 영상처리를 통해 만들어지게 됩니다
이를 통해 모터를 제어합니다
또한 영상처리장치의 전원을 제어하여 동작 중 일정 시간동안 부팅 및 녹화를 하도록 하며
취득데이터를 통한 학습은 귀가 후 충전중에 할 수 있도록 하고자 합니다
이를 통해 학습에 필요한 전원 이슈를 해결하고자 합니다
학습을 통해 만들어진 가중치 데이터는 마이크로 컨트롤러와 유선통신을 통해 업데이트되게 됩니다
12
이때 해결해야할 문제가 하나 더 발생하는데
최초 구동시에 발생하는 cold start problem issue가 있습니다
모델은 크게 핸들 압력과 영상처리를 통한 보행 패턴 데이터를 필요로 하는데
최초 구동시에는 학습된 영상처리 데이터가 없기 때문에 앞의 프로세스로 동작할 수 없습니다
때문에 학습 분리 프로세스와 별도로 최초 구동시에 안정적으로 동작할 수 있도록 실시간 영상처리 프로세스 또한 적용해야 합니다